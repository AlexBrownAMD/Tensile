Parameters:
  Name: GEMM_Catalyst_15.201
  Backend: OCL
  DebugPrintLevel: 2
  ForceRedo: True
  PlatformIdx: 0
  DeviceIdx: 0
  EnqueuesPerSync: 1
  SyncsPerBenchmark: 1
  CMakeBuildType: Debug
  SolutionPrintDebug: False
  NumElementsToValidate: 16
  ValidationMaxToPrint: 16
  ValidationPrintValids: False
  ShortFileNames: False
  MergeFiles: False

  #NumElementsToValidate: 16
  

BenchmarkProblems:
  - ProblemType:
      OperationType: GEMM
      DataType: s
      TransposeA: False
      TransposeB: True
      UseBeta: False

    InitialSolutionParameters:
      LoopTail: False
      WorkGroupEdge: 16
      ThreadTileEdge: 4

    # keep benchmark as single list to make easier to modify in future
    BenchmarkCommonParameters:
      - ProblemSizes: [ [16, 128], 0, 0 ]
      - LoopTail: [ False ]
      - WorkGroupShape: [ 0 ]
      - SplitU: [ 1 ]
      - ThreadTileShape: [ 0 ]
      - EdgeType: [ "Branch" ]
        EdgeMultiKernel: [ False ] # hardcoded
      - WorkGroupOrder: [ 1 ]
    ForkParameters:
      - WorkGroupEdge: [8, 16]
      - ThreadTileEdge: [2, 4, 6, 8]
    BenchmarkForkParameters:
      - ProblemSizes: [ [128, 1024] ] # important for join step
      - LoopUnroll: [4, 8, 16]
    JoinParameters:
      - MacroTile
      - DepthU
    BenchmarkJoinParameters:
      - NumLoadsParaA: [ 1, 2, 4 ]
      - NumLoadsParaB: [ 1, 2, 4 ]
    BenchmarkFinalParameters:
      ProblemSizes: [ [16, 16, 16, 128], [16, 16, 16, 128], [16, 16, 16, 128] ]


# final create problem-range -> solution mapping and encode to .yaml
Analyze:
  # parameters determining what solutions to keep, and how backend should be written

# build the actual library
Library:
  PrintDebug: 2
  # input, output
  # toolchain?, Debug/Release
  # defines

# builds a benchmarking / validation client
Client:
  builds from same library info

BenchmarkClient: # runs the benchmark client a bunch of times to produce plot data
  ProblemSizes: {1, 2, 4, 8, ...}


